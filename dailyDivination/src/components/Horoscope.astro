---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

interface Props {
   imagePath: string;
   altText: string;
   name: string;
   description: string;
   element: string;
   planet: string
   dates: string

   dataName: string
}
const { imagePath, altText, name, description, element, planet, dates, dataName } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/horoscopes/*.{jpeg,jpg,png,gif,svg}');

// Match the file name with the glob
const resolvedImage = images[`/src/assets/horoscopes/${imagePath}`];
if (!resolvedImage) {
    throw new Error(`Image "${imagePath}" does not exist in "/src/assets/horoscopes".`);
}

const sign = `${name}`;  // You can make this dynamic later
let horoscope = "Loading your horoscope..."; // Default text
try {
   const response = await fetch(`https://horoscope-app-api.vercel.app/api/v1/get-horoscope/daily?sign=${sign}&day=TODAY`);
   const data = await response.json();
   horoscope = data.data.horoscope_data; // Actual horoscope data
} catch (error) {
   horoscope = "Sorry, we couldn't fetch your horoscope right now."; // Error message if fetch fails
}


---
    <div class="row">
        <div class="col">
            <Image src={resolvedImage()} alt={altText} />
        </div>
       
            <div class="col">
                <h5>{name}</h5>
                <h6>{dates}</h6>
                <p class="horoscopeDes"> Element: {element}</p>
                <p class="horoscopeDes"> Planet: {planet}</p>
                <p class="horoscopeReturn">{horoscope}</p>
            </div>
   
        </div>


<style>
/*make images responsive */
     .col img{ 
    width: 100%;
    height: auto; /* Maintain aspect ratio */
    max-width: 100%; /* Ensure it doesn't exceed its container */
}


</style>