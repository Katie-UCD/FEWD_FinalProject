---
import type { ImageMetadata } from 'astro';
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/moon/*.{jpeg,jpg,png,gif}');



// Function to resolve the image path
function getImageForMoonPhase(phase: number): string {
	if (phase ==0) return '/src/assets/moon/new.png';
    if (phase >= 0.1 && phase < 0.24) return '/src/assets/moon/waxingCrescent.png';
	if (phase ==0.25) return '/src/assets/moon/firstQrtr.png';
    if (phase >= 0.26 && phase < 0.4) return '/src/assets/moon/waxingGibbous.png';
	if (phase ==0.5) return '/src/assets/moon/full.png';
    if (phase >= 0.6 && phase < 0.74) return '/src/assets/moon/waningGibbous.png';
	if (phase ==0.75) return '/src/assets/moon/lastQrtr.png';
    return '/src/assets/moon/waningCrescent.png';
}
---
<!-- Nav bar start -->
<nav class="navbar navbar-expand-lg navbar-light py-0 sticky-top">
    <div class="container">
        <a class="nav-link" href="numerology">Numerology</a>
        <a class="nav-link active logo" aria-current="page" href="/">Daily Divination</a>
        <a class="nav-link" href="moonPhases">Moon Phases</a>
    </div>
</nav>
<!-- Nav end -->

<!-- Header start -->
<div class="container text-center header">
    <div class="row">
        <div class="col">
			<img id="moonImage" src={getImageForMoonPhase(0)} alt="Current Moon Phase" width="200px" />
        </div>
        <div class="col-6 align-self-center">
            <h1 id="moonPhaseName">Loading...</h1>
            <h2 id="dateDisplay">Loading...</h2>
        </div>
    </div>
</div>
<!-- Header end -->

<style>
    /* Nav CSS */
    .nav-link, a {
        font-family: "Katibeh", serif;
        color: var(--cream);
        font-size: 1.5em;
    }
    .logo {
        color: var(--brown);
        font-size: 3em;
        position: relative;
        top: 20px;
    }
    .navbar {
        background-color: var(--orange);
    }

    /* Header CSS */
    .header {
        padding: 50px;
    }
</style>

<script>
const url = 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/London,UK?key=UCYENKK77ZYNJ8NSSJD5GFVHX';
const options = {
    method: 'GET',
};

// Initialize function to run on page load
async function init() {
    // Update the date
    const today = new Date();
    const day = today.getDate();
    const year = today.getFullYear();
    const monthNames = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ];
    const month = monthNames[today.getMonth()];
    const formattedDate = `${day} ${month} ${year}`;
    const dateDisplay = document.getElementById("dateDisplay");
   if (dateDisplay){ dateDisplay.textContent = formattedDate;}

    // Fetch moon phase data
    try {
        const response = await fetch(url, options);
        const result = await response.json();

        // Extract moonphase from the first day's data
        const moonPhase = result.days[0].moonphase;

        // Update the moon phase name and image
        const moonPhaseName = document.getElementById("moonPhaseName");
        const moonImage = document.getElementById("moonImage") as HTMLImageElement; // Casting to HTMLImageElement to avoid error with

	//making sure the object isn't null
	if (moonPhaseName && moonImage) {	
        if (moonPhase == 0) {
            moonPhaseName.textContent = "New Moon";
            moonImage.src = "/src/assets/moon/new.png";
		}else if (moonPhase >= 0.1 && moonPhase < 0.24) {
            moonPhaseName.textContent = "Waxing Crescent";
            moonImage.src = "/src/assets/moon/waxingCrescent.png";
		} else if (moonPhase == 0.25) {
            moonPhaseName.textContent = "First Quarter";
            moonImage.src = "/src/assets/moon/firstQrtr.png";
        } else if (moonPhase >= 0.26 && moonPhase < 0.4) {
            moonPhaseName.textContent = "Waxing Gibbous";
            moonImage.src = "/src/assets/moon/waxingGibbous.png";
		} else if (moonPhase == 0.5) {
            moonPhaseName.textContent = "Full Moon";
            moonImage.src = "/src/assets/moon/fullMoon.png";
        } else if (moonPhase >= 0.6 && moonPhase < 0.74) {
            moonPhaseName.textContent = "Waning Gibbous";
            moonImage.src = "/src/assets/moon/waningGibbous.png";
		} else if (moonPhase == 0.75) {
            moonPhaseName.textContent = "Last Quarter";
            moonImage.src = "/src/assets/moon/lastQrtr.png";
        } else {
            moonPhaseName.textContent = "Waning Crescent";
            moonImage.src = "/src/assets/moon/waningCrescent.png";
        }
    }} catch (error) {
    console.error('Error fetching moon phase data:', error);

    // Update the DOM in case of an error
    const moonPhaseName = document.getElementById("moonPhaseName");
    const moonImage = document.getElementById("moonImage") as HTMLImageElement; // Cast to HTMLImageElement 

    if (moonPhaseName && moonImage) {
        moonPhaseName.textContent = 'Error fetching moon phase data.';
        moonImage.src = "/src/assets/moon/error.png"; // Placeholder for an error image
    } else {
        console.error("One or more elements ('moonPhaseName', 'moonImage') not found.");
    }
}

}

// Run the init function on page load
window.onload = init;
</script>

